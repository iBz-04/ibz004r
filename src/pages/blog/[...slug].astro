---
import { type CollectionEntry, getCollection } from 'astro:content'
import BlogPost from '../../layouts/BlogPost.astro'

export async function getStaticPaths() {
  const posts = (await getCollection('blog')).sort(
    (a, b) => a.data.pubDate!.valueOf() - b.data.pubDate!.valueOf(),
  )

  return posts.map((post, index) => ({
    params: { slug: post.slug },
    props: { post, previous: posts[index - 1] },
  }))
}

type Props = {
  post: CollectionEntry<'blog'>
  previous?: CollectionEntry<'blog'>
}

const { post, previous } = Astro.props
const { Content, headings } = await post.render()

const dev = process.env.NODE_ENV !== 'production'
---

<BlogPost headings={headings} {...post}>
  <Content />

  {
    previous && (
      <div class="mt-4">
        <a
          href={`/blog/${previous.slug}`}
          class="mt-8 inline-block rounded-lg border border-zinc-300 px-2 py-1 pb-2 no-underline transition-[background] duration-200 hover:border-zinc-400 dark:border-neutral-700 dark:hover:border-neutral-600">
          <div class="text-secondary inline-flex items-center gap-2 font-mono text-sm">
            <div class="i-lucide-book-text inline-block" /> Keep reading
          </div>

          <div class="ms-5.5 leading-none">{previous.data.title}</div>
        </a>
      </div>
    )
  }

  {
    !dev && (
      <script
        src="https://giscus.app/client.js"
        data-repo="iBz-04/ibz004r"
        data-repo-id="R_kgDONQn5Pg"
        data-category-id="DIC_kwDONQn5Ps4CnG3g"
        data-mapping="pathname"
        data-strict="0"
        data-reactions-enabled="1"
        data-emit-metadata="0"
        data-input-position="bottom"
        data-theme="preferred_color_scheme"
        data-lang="en"
        crossorigin="anonymous"
        async
      />
    )
  }
</BlogPost>
